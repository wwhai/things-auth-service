// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: authgrpc.proto

package authgrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// AuthRequest
//
type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	//
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	//
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	//
	Peerhost string `protobuf:"bytes,5,opt,name=peerhost,proto3" json:"peerhost,omitempty"`
	//
	Sockport int32 `protobuf:"varint,6,opt,name=sockport,proto3" json:"sockport,omitempty"`
	//
	Peercert string `protobuf:"bytes,7,opt,name=peercert,proto3" json:"peercert,omitempty"`
	//
	IsBridge bool `protobuf:"varint,8,opt,name=is_bridge,json=isBridge,proto3" json:"is_bridge,omitempty"`
	//
	IsSuperuser bool `protobuf:"varint,9,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	//
	Mountpoint string `protobuf:"bytes,10,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	//
	Zone string `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	//
	TlsCommonName string `protobuf:"bytes,12,opt,name=tls_common_name,json=tlsCommonName,proto3" json:"tls_common_name,omitempty"`
	//
	TlsSubject string `protobuf:"bytes,13,opt,name=tls_subject,json=tlsSubject,proto3" json:"tls_subject,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authgrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authgrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_authgrpc_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *AuthRequest) GetPeerhost() string {
	if x != nil {
		return x.Peerhost
	}
	return ""
}

func (x *AuthRequest) GetSockport() int32 {
	if x != nil {
		return x.Sockport
	}
	return 0
}

func (x *AuthRequest) GetPeercert() string {
	if x != nil {
		return x.Peercert
	}
	return ""
}

func (x *AuthRequest) GetIsBridge() bool {
	if x != nil {
		return x.IsBridge
	}
	return false
}

func (x *AuthRequest) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

func (x *AuthRequest) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *AuthRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *AuthRequest) GetTlsCommonName() string {
	if x != nil {
		return x.TlsCommonName
	}
	return ""
}

func (x *AuthRequest) GetTlsSubject() string {
	if x != nil {
		return x.TlsSubject
	}
	return ""
}

//
//  ACLRequest
//
type ACLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	//
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	//
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	//
	Peerhost string `protobuf:"bytes,5,opt,name=peerhost,proto3" json:"peerhost,omitempty"`
	//
	Sockport int32 `protobuf:"varint,6,opt,name=sockport,proto3" json:"sockport,omitempty"`
	//
	Peercert string `protobuf:"bytes,7,opt,name=peercert,proto3" json:"peercert,omitempty"`
	//
	IsBridge bool `protobuf:"varint,8,opt,name=is_bridge,json=isBridge,proto3" json:"is_bridge,omitempty"`
	//
	IsSuperuser bool `protobuf:"varint,9,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	//
	Mountpoint string `protobuf:"bytes,10,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	//
	Zone string `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	//
	TlsCommonName string `protobuf:"bytes,12,opt,name=tls_common_name,json=tlsCommonName,proto3" json:"tls_common_name,omitempty"`
	//
	TlsSubject string `protobuf:"bytes,13,opt,name=tls_subject,json=tlsSubject,proto3" json:"tls_subject,omitempty"`
	// acl
	Topic string `protobuf:"bytes,14,opt,name=topic,proto3" json:"topic,omitempty"`
	// access
	Access string `protobuf:"bytes,15,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *ACLRequest) Reset() {
	*x = ACLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authgrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLRequest) ProtoMessage() {}

func (x *ACLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authgrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLRequest.ProtoReflect.Descriptor instead.
func (*ACLRequest) Descriptor() ([]byte, []int) {
	return file_authgrpc_proto_rawDescGZIP(), []int{1}
}

func (x *ACLRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ACLRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ACLRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ACLRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ACLRequest) GetPeerhost() string {
	if x != nil {
		return x.Peerhost
	}
	return ""
}

func (x *ACLRequest) GetSockport() int32 {
	if x != nil {
		return x.Sockport
	}
	return 0
}

func (x *ACLRequest) GetPeercert() string {
	if x != nil {
		return x.Peercert
	}
	return ""
}

func (x *ACLRequest) GetIsBridge() bool {
	if x != nil {
		return x.IsBridge
	}
	return false
}

func (x *ACLRequest) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

func (x *ACLRequest) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *ACLRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ACLRequest) GetTlsCommonName() string {
	if x != nil {
		return x.TlsCommonName
	}
	return ""
}

func (x *ACLRequest) GetTlsSubject() string {
	if x != nil {
		return x.TlsSubject
	}
	return ""
}

func (x *ACLRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ACLRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

//
// bool result: true|false
// string msg: Message
// bool is_superuser: true|false
//
type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg         string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	IsSuperuser bool   `protobuf:"varint,3,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authgrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authgrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_authgrpc_proto_rawDescGZIP(), []int{2}
}

func (x *AuthResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *AuthResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AuthResponse) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

//
// bool result: true|false
// string msg: Message
//
type ACLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ACLResponse) Reset() {
	*x = ACLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authgrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLResponse) ProtoMessage() {}

func (x *ACLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authgrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLResponse.ProtoReflect.Descriptor instead.
func (*ACLResponse) Descriptor() ([]byte, []int) {
	return file_authgrpc_proto_rawDescGZIP(), []int{3}
}

func (x *ACLResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ACLResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_authgrpc_proto protoreflect.FileDescriptor

var file_authgrpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x22, 0x8e, 0x03, 0x0a, 0x0b, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6c, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xbb, 0x03, 0x0a, 0x0a,
	0x41, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6c, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5b, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x0b, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32,
	0x85, 0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x43, 0x4c, 0x12, 0x14, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x43, 0x4c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x23, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x67,
	0x72, 0x70, 0x63, 0x42, 0x08, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x50, 0x00, 0x5a,
	0x0b, 0x2e, 0x2f, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authgrpc_proto_rawDescOnce sync.Once
	file_authgrpc_proto_rawDescData = file_authgrpc_proto_rawDesc
)

func file_authgrpc_proto_rawDescGZIP() []byte {
	file_authgrpc_proto_rawDescOnce.Do(func() {
		file_authgrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_authgrpc_proto_rawDescData)
	})
	return file_authgrpc_proto_rawDescData
}

var file_authgrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_authgrpc_proto_goTypes = []interface{}{
	(*AuthRequest)(nil),  // 0: authgrpc.AuthRequest
	(*ACLRequest)(nil),   // 1: authgrpc.ACLRequest
	(*AuthResponse)(nil), // 2: authgrpc.AuthResponse
	(*ACLResponse)(nil),  // 3: authgrpc.ACLResponse
}
var file_authgrpc_proto_depIdxs = []int32{
	0, // 0: authgrpc.Authentication.CheckAuth:input_type -> authgrpc.AuthRequest
	1, // 1: authgrpc.Authentication.CheckACL:input_type -> authgrpc.ACLRequest
	2, // 2: authgrpc.Authentication.CheckAuth:output_type -> authgrpc.AuthResponse
	3, // 3: authgrpc.Authentication.CheckACL:output_type -> authgrpc.ACLResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_authgrpc_proto_init() }
func file_authgrpc_proto_init() {
	if File_authgrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authgrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authgrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authgrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authgrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authgrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authgrpc_proto_goTypes,
		DependencyIndexes: file_authgrpc_proto_depIdxs,
		MessageInfos:      file_authgrpc_proto_msgTypes,
	}.Build()
	File_authgrpc_proto = out.File
	file_authgrpc_proto_rawDesc = nil
	file_authgrpc_proto_goTypes = nil
	file_authgrpc_proto_depIdxs = nil
}
